
configurations {
    querydslapt
}

ext {
    // VERSIONS OF THIRD-PARTY LIBRARIES SHOULD BE DEFINED HERE.

    SPRING_VERSION = '4.1.2.RELEASE'
    SPRING_SECURITY_VERSION = '3.2.5.RELEASE'
    SPRING_DATA_JPA_VERSION = '1.7.1.RELEASE'

    QUERYDSL_VERSION = '3.6.0'
    GOOGLE_GUAVA_VERSION = '18.0'

    HIBERNATE_VERSION = '4.3.7.Final'
    HIBERNATE_VALIDATOR_VERSION = '5.1.3.Final'

    LIQUIBASE_VERSION = '3.1.1'

    //SITEMESH_VERSION = '3.0.0'
    //DISPLAYTAG_VERSION = '1.2'

    SLF4J_VERSION = '1.7.7' 
    LOGBACK_VERSION = '1.1.2'

    JAVAX_VALIDATION_VERSION = '1.1.0.Final'
    JAVA_EE_WEB_VERSION = '7.0'

    JUNIT_VERSION = '4.11'
    MOCKITO_VERSION = '1.10.8'
    HSQLDB_VERSION = '2.3.2'
    JAVAX_EL_VERSION = '3.0.0'
    GLASSFISH_JAVAX_EL_VERSION = '3.0.0'
}

dependencies {
    // spring
    compile("org.springframework:spring-context:$SPRING_VERSION") {exclude group: 'commons-logging'} 
    compile("org.springframework.data:spring-data-jpa:$SPRING_DATA_JPA_VERSION") {exclude group: 'commons-logging'}
    runtime("org.springframework:spring-aspects:$SPRING_VERSION") // needed by Spring JPA auditing
    // Explicitly using 4.x version of spring-orm, to override spring-data-jpa's dependency on 3.2 version.
    // This will also pull in 4.x versions of spring-jdbc and spring-tx.  
    compile("org.springframework:spring-orm:$SPRING_VERSION") {exclude group: 'commons-logging'}

    // hibernate  
    compile "org.hibernate:hibernate-entitymanager:$HIBERNATE_VERSION"
    
    compile "org.slf4j:slf4j-api:$SLF4J_VERSION"

    compile "javax.validation:validation-api:$JAVAX_VALIDATION_VERSION"
    
    // for test compiling and execution
    testCompile "junit:junit:$JUNIT_VERSION"
    testCompile "org.mockito:mockito-all:$MOCKITO_VERSION"
    testCompile "org.hsqldb:hsqldb:$HSQLDB_VERSION"
    testCompile("org.springframework:spring-test:$SPRING_VERSION") {exclude group: 'commons-logging'}    
    testRuntime "ch.qos.logback:logback-classic:$LOGBACK_VERSION"
    
    compile("org.liquibase:liquibase-core:$LIQUIBASE_VERSION") {exclude group: 'org.eclipse.jetty'}
    
    // bean validation implementation needed in runtime
    runtime "org.hibernate:hibernate-validator:$HIBERNATE_VALIDATOR_VERSION"
    // bean validation has a javax.el dependency; available in JEE servers but must be added for junits
    testRuntime "javax.el:javax.el-api:$JAVAX_EL_VERSION"
    testRuntime "org.glassfish:javax.el:$GLASSFISH_JAVAX_EL_VERSION"

    // QueryDSL libraries. It uses Google Guava 14, which throws a CDI error during JEE deployment. So we are 
    // explicitly giving a dependency to Google Guava 17 instead.
    querydslapt "com.mysema.querydsl:querydsl-apt:$QUERYDSL_VERSION"
    compile "com.mysema.querydsl:querydsl-jpa:$QUERYDSL_VERSION"
    compile "com.google.guava:guava:$GOOGLE_GUAVA_VERSION"

    //compile 'org.codehaus.groovy:groovy-all:2.3.4'

}


// See http://stackoverflow.com/questions/12305191/compile-java-project-without-using-gradles-java-plugin.
// Was not able to use a separate sourceSet for the generated code - got a cyclic dependency error. So for now,
// the generated Q****.java files will be created in the same directory as the entities.

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = ["-proc:only", "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"]
    destinationDir = sourceSets.main.java.srcDirs.iterator().next()
}
compileJava.dependsOn generateQueryDSL












